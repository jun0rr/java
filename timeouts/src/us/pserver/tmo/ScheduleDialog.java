/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package us.pserver.tmo;

import java.awt.Container;
import java.awt.Frame;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import us.pserver.date.SimpleDate;
import us.pserver.jcal.CalendarDialog;
import us.pserver.scron.Schedule;


/**
 *
 * @author Juno
 */
public class ScheduleDialog extends JDialog {

  public static final String[] timeUnit = 
      { "SECOND", "MINUTE", "HOUR", 
        "DAY", "MONTH", "YEAR" };
  
  private Schedule sched;
  
  private SimpleDate date;
  
  /**
   * Creates new form ScheduleDialog
   */
  public ScheduleDialog() {
    super((Frame) null, true);
    sched = new Schedule();
    date = sched.getDate();
    initComponents();
    setDate(date);
    
    intervalSpin.setEnabled(repeatCheck.isSelected());
    tmUnitCombo.setEnabled(repeatCheck.isSelected());
    intervalLabel.setEnabled(repeatCheck.isSelected());
    tmUnitLabel.setEnabled(repeatCheck.isSelected());
  }
  
  
  public ScheduleDialog setDate(SimpleDate sd) {
    if(sd == null) {
      schedBar.setText("# Invalid Date #");
      dateField.requestFocus();
    }
    else {
      date = sd;
      dateField.setText(date.format(SimpleDate.DDMMYYYY_SLASH));
      hourSpin.setValue(date.hour());
      minSpin.setValue(date.minute());
      secSpin.setValue(date.second());
      sched.startAt(date);
    }
    return this;
  }
  
  
  public SimpleDate getDate() {
    return date;
  }
  
  
  private void parseIimeUnit() {
    int interval = (int) intervalSpin.getValue();
    switch(tmUnitCombo.getSelectedIndex()) {
      case 0:
        sched.repeatInSeconds(interval);
        break;
      case 1:
        sched.repeatInMinutes(interval);
        break;
      case 2:
        sched.repeatInHours(interval);
        break;
      case 3:
        sched.repeatInDays(interval);
        break;
      case 4:
        sched.repeatInMonths(interval);
        break;
      case 5:
        sched.repeatInYears(interval);
        break;
    }
  }
  
  
  private void parseDate() {
    SimpleDate sd = SimpleDate.parseDate(
        dateField.getText(), 
        SimpleDate.DDMMYYYY_SLASH);
    if(sd == null) {
      schedBar.setText("# Invalid Date: "
          + dateField.getText()+ " #");
      dateField.requestFocus();
    }
    else {
      date = sd;
      date.hour((int) hourSpin.getValue())
          .minute((int) minSpin.getValue())
          .second((int) secSpin.getValue());
      sched.setDate(date);
    }
  }
  
  
  public Schedule getSchedule() {
    if(sched == null) return null;
    this.parseDate();
    if(repeatCheck.isSelected()) {
      this.parseIimeUnit();
    }
    else sched.disableRepeat();
    return sched;
  }
  
  
  public ScheduleDialog setSchedule(Schedule s) {
    if(s == null) return this;
    
    sched = s;
    date = sched.getDate();
    
    dateField.setText(date.format(
        SimpleDate.DDMMYYYY_SLASH));
    hourSpin.setValue(date.hour());
    minSpin.setValue(date.minute());
    secSpin.setValue(date.second());
    
    if(sched.isRepeatEnabled()) {
      intervalSpin.setEnabled(true);
      intervalSpin.setValue(
          sched.getRepeatValue());
      tmUnitCombo.setSelectedItem(sched.getRepeater().name());
      tmUnitCombo.setEnabled(true);
      repeatCheck.setSelected(true);
    }
    return this;
  }
  
  
  public Schedule showScheduleDialog(Container c) {
    this.setLocationRelativeTo(c);
    this.setVisible(true);
    return this.getSchedule();
  }


  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    dateField = new javax.swing.JTextField();
    calendarButton = new javax.swing.JButton();
    jPanel2 = new javax.swing.JPanel();
    jLabel4 = new javax.swing.JLabel();
    hourSpin = new TimeSpin(date.hour(), 0, 23);
    jLabel5 = new javax.swing.JLabel();
    minSpin = new TimeSpin(date.minute(), 0, 59);
    jLabel6 = new javax.swing.JLabel();
    secSpin = new TimeSpin(date.second(), 0, 59);
    jPanel3 = new javax.swing.JPanel();
    repeatCheck = new javax.swing.JCheckBox();
    intervalSpin = new TimeSpin(1, 1, 100);
    intervalLabel = new javax.swing.JLabel();
    tmUnitCombo = new javax.swing.JComboBox();
    tmUnitLabel = new javax.swing.JLabel();
    jPanel4 = new javax.swing.JPanel();
    schedBar = new javax.swing.JLabel();
    okButton = new javax.swing.JButton();
    cancelButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Set Schedule");
    setIconImage(new ImageIcon(getClass().getResource("/us/pserver/tmo/imgs/timer-blue-32.png")).getImage());

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(0, 51, 102))); // NOI18N

    dateField.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
    dateField.setToolTipText("Date: dd/mm/aaaa");

    calendarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/us/pserver/tmo/imgs/calendar-20.png"))); // NOI18N
    calendarButton.setToolTipText("Open Calendar");
    calendarButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        calendarButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap(41, Short.MAX_VALUE)
        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(calendarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(41, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(dateField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(calendarButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(0, 51, 102))); // NOI18N

    jLabel4.setText("Hour");

    hourSpin.setToolTipText("");

    jLabel5.setText("Minutes");

    jLabel6.setText("Seconds");

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel4)
          .addComponent(hourSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel5)
          .addComponent(minSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel6)
          .addComponent(secSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel4)
          .addComponent(jLabel5)
          .addComponent(jLabel6))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(hourSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(minSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(secSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Repeat", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 1, 12), new java.awt.Color(0, 51, 102))); // NOI18N

    repeatCheck.setText("Repeat Enabled");
    repeatCheck.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        repeatCheckActionPerformed(evt);
      }
    });

    intervalLabel.setText("Interval:");

    tmUnitCombo.setModel(new javax.swing.DefaultComboBoxModel(timeUnit));

    tmUnitLabel.setText("TimeUnit:");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(repeatCheck)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(tmUnitLabel)
              .addComponent(intervalLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(intervalSpin, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
              .addComponent(tmUnitCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addComponent(repeatCheck)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(intervalSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(intervalLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tmUnitCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tmUnitLabel))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jPanel4.setBackground(new java.awt.Color(255, 255, 255));

    schedBar.setBackground(new java.awt.Color(239, 239, 239));
    schedBar.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
    schedBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    schedBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

    okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/us/pserver/tmo/imgs/ok-18.png"))); // NOI18N
    okButton.setToolTipText("Ok");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });

    cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/us/pserver/tmo/imgs/cancel-20.png"))); // NOI18N
    cancelButton.setToolTipText("Cancel");
    cancelButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        cancelButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(schedBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
        .addComponent(schedBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  
  private void calendarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calendarButtonActionPerformed
    SimpleDate sd = CalendarDialog
        .showModalCalendarDialog(calendarButton, null);
    if(sd == null) return;
    
    date = sd;
    dateField.setText(date.format(SimpleDate.DDMMYYYY_SLASH));
    sched.startAt(date);
    schedBar.setText(sched.toString());
  }//GEN-LAST:event_calendarButtonActionPerformed

  
  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    sched = null;
    this.dispose();
  }//GEN-LAST:event_cancelButtonActionPerformed

  private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    if(dateField.getText() == null 
        || dateField.getText().isEmpty()) {
      schedBar.setText("# Invalid Date. #");
      dateField.requestFocus();
    }
    else this.dispose();
  }//GEN-LAST:event_okButtonActionPerformed

  private void repeatCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatCheckActionPerformed
    intervalSpin.setEnabled(repeatCheck.isSelected());
    tmUnitCombo.setEnabled(repeatCheck.isSelected());
    intervalLabel.setEnabled(repeatCheck.isSelected());
    tmUnitLabel.setEnabled(repeatCheck.isSelected());
  }//GEN-LAST:event_repeatCheckActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(ScheduleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(ScheduleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(ScheduleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(ScheduleDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
        //</editor-fold>

    System.out.println("* sched: "
        + new ScheduleDialog().showScheduleDialog(null));
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton calendarButton;
  private javax.swing.JButton cancelButton;
  private javax.swing.JTextField dateField;
  private javax.swing.JSpinner hourSpin;
  private javax.swing.JLabel intervalLabel;
  private javax.swing.JSpinner intervalSpin;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JSpinner minSpin;
  private javax.swing.JButton okButton;
  private javax.swing.JCheckBox repeatCheck;
  private javax.swing.JLabel schedBar;
  private javax.swing.JSpinner secSpin;
  private javax.swing.JComboBox tmUnitCombo;
  private javax.swing.JLabel tmUnitLabel;
  // End of variables declaration//GEN-END:variables
}
