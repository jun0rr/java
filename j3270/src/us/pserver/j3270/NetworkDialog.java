/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package us.pserver.j3270;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.ImageIcon;


/**
 *
 * @author juno
 */
public class NetworkDialog extends javax.swing.JDialog {

  private boolean retnull;
  
  
  /**
   * Creates new form NetworkDialog
   */
  public NetworkDialog(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
    this.addWindowListener(new WindowAdapter() {
      @Override
      public void windowClosing(WindowEvent e) {
        retnull = true;
        setVisible(false);
        dispose();
      }
    });
    KeyListener kl = new KeyAdapter() {
      public void keyPressed(KeyEvent e) {
        if(e.getKeyCode() == KeyEvent.VK_ESCAPE) {
          setVisible(false);
          dispose();
        }
      }
    };
    addrField.addKeyListener(kl);
    portField.addKeyListener(kl);
    okButton.addKeyListener(kl);
    this.addKeyListener(kl);
    addrField.setText(J3270.SERVER_ADDR);
    addrField.setSelectionStart(0);
    addrField.setSelectionEnd(addrField.getText().length());
    portField.setText(String.valueOf(J3270.SERVER_PORT));
    portField.setSelectionStart(0);
    portField.setSelectionEnd(portField.getText().length());
    addrField.requestFocus();
    label.setText("[ "+ addrField.getText()+ ":"+ portField.getText()+ " ]");
    this.setLocationRelativeTo(parent);
  }
  
  
  public String getAddress() {
    return addrField.getText();
  }
  
  
  public int getPort() {
    try {
      return Integer.parseInt(portField.getText());
    } catch(NumberFormatException ex) {
      return -1;
    }
  }
  
  
  public void setAddress(String address) {
    addrField.setText(address);
  }
  
  
  public void setPort(int port) {
    portField.setText(String.valueOf(port));
  }


  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    addrField = new javax.swing.JTextField();
    jLabel2 = new javax.swing.JLabel();
    portField = new javax.swing.JTextField();
    jSeparator1 = new javax.swing.JSeparator();
    okButton = new javax.swing.JButton();
    label = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Network Settings");
    setIconImage(new ImageIcon(getClass().getResource("/us/pserver/j3270/images/icon24.png")).getImage());

    jPanel1.setBackground(new java.awt.Color(239, 239, 239));

    jLabel1.setFont(new java.awt.Font("sansserif", 1, 11)); // NOI18N
    jLabel1.setText("Server Address");

    addrField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        addrFieldKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        addrFieldKeyReleased(evt);
      }
    });

    jLabel2.setFont(new java.awt.Font("sansserif", 1, 11)); // NOI18N
    jLabel2.setText("Port");

    portField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        portFieldKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        portFieldKeyReleased(evt);
      }
    });

    okButton.setText("OK");
    okButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        okButtonActionPerformed(evt);
      }
    });

    label.setFont(new java.awt.Font("sansserif", 1, 11)); // NOI18N
    label.setForeground(java.awt.Color.gray);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jSeparator1)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(addrField)
                  .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jLabel2)
                  .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(jLabel2))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(addrField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(okButton)
          .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  
  private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    if(this.getAddress() == null 
        || this.getAddress().isEmpty()) {
      label.setText("Invalid Address");
      addrField.requestFocus();
      return;
    }
    if(this.getPort() < 1
        || this.getPort() > Short.MAX_VALUE) {
      label.setText("Invalid Port");
      portField.requestFocus();
      return;
    }
    this.setVisible(false);
    this.dispose();
  }//GEN-LAST:event_okButtonActionPerformed

  
  private void addrFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addrFieldKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER
        || evt.getKeyCode() == KeyEvent.VK_TAB)
      portField.requestFocus();
  }//GEN-LAST:event_addrFieldKeyPressed

  
  private void portFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_portFieldKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER)
      okButtonActionPerformed(null);
    else if(evt.getKeyCode() == KeyEvent.VK_TAB)
      okButton.requestFocus();
  }//GEN-LAST:event_portFieldKeyPressed

  
  private void addrFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addrFieldKeyReleased
    label.setText("[ "+ addrField.getText()+ ":"+ portField.getText()+ " ]");
  }//GEN-LAST:event_addrFieldKeyReleased

  
  private void portFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_portFieldKeyReleased
    label.setText("[ "+ addrField.getText()+ ":"+ portField.getText()+ " ]");
  }//GEN-LAST:event_portFieldKeyReleased

  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(NetworkDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(NetworkDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(NetworkDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(NetworkDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
        //</editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        NetworkDialog dialog = new NetworkDialog(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField addrField;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JLabel label;
  private javax.swing.JButton okButton;
  private javax.swing.JTextField portField;
  // End of variables declaration//GEN-END:variables
}
