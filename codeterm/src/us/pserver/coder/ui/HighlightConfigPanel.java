/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package us.pserver.coder.ui;

import java.awt.Container;
import java.awt.Window;
import java.awt.event.MouseEvent;
import javax.swing.DefaultListModel;
import us.pserver.coder.FontXml;
import us.pserver.coder.Match;
import us.pserver.coder.MatchAttribute;
import us.pserver.coder.TextStyle;


/**
 *
 * @author juno
 */
public class HighlightConfigPanel extends javax.swing.JPanel {

  private FrameEditor frame;
  
  private DefaultListModel<MatchAttribute> model;
  
  
  /**
   * Creates new form PanelConfig
   */
  public HighlightConfigPanel(FrameEditor edt) {
    super();
    if(edt == null)
      throw new IllegalArgumentException(
          "Invalid Editor (edt="+ edt+ ")");
    
    frame = edt;
    model = new DefaultListModel<>();
    
    updateList();
    initComponents();
  }
  
  
  private Window getParentWindow() {
    Container c = this;
    while(c != null) {
      if(c instanceof Window)
        return (Window) c;
      c = c.getParent();
    }
    return null;
  }
  
  
  public void updateList() {
    model.clear();
    for(Match m : frame.getEditor().getSintaxHighlighter().words()) {
      model.addElement(new MatchAttribute(m));
    }
    if(list != null) list.setModel(model);
  }
  
  
  public void remove(Match m) {
    if(m != null) {
      frame.getEditor().getSintaxHighlighter().remove(m);
      updateList();
    }
  }
  
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    scroll = new javax.swing.JScrollPane();
    list = new javax.swing.JList();
    jPanel1 = new javax.swing.JPanel();
    applyAction = new us.pserver.coder.ui.ActionLabel();
    cancelAction = new us.pserver.coder.ui.ActionLabel();
    btnAddHighlight = new javax.swing.JButton();
    btnRmHighlight = new javax.swing.JButton();

    list.setCellRenderer(new us.pserver.coder.ui.MatchAttributeRenderer(frame.getEditor().getBackground()));
    list.setModel(model);
    list.setToolTipText("Double Click to Edit");
    list.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        listMouseClicked(evt);
      }
    });
    scroll.setViewportView(list);

    jPanel1.setBackground(new java.awt.Color(77, 77, 77));

    applyAction.setForeground(new java.awt.Color(255, 255, 255));
    applyAction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/us/pserver/coder/images/check-white-20.png"))); // NOI18N
    applyAction.setText("Apply");
    applyAction.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        applyActionMouseClicked(evt);
      }
    });

    cancelAction.setForeground(new java.awt.Color(255, 255, 255));
    cancelAction.setIcon(new javax.swing.ImageIcon(getClass().getResource("/us/pserver/coder/images/cancel-white-20.png"))); // NOI18N
    cancelAction.setText("Cancel");
    cancelAction.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        cancelActionMouseClicked(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(cancelAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(applyAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(15, 15, 15))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addGap(15, 15, 15)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(applyAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(cancelAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(15, 15, 15))
    );

    btnAddHighlight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/us/pserver/coder/images/add-gray-16.png"))); // NOI18N
    btnAddHighlight.setToolTipText("Add New Highlight");
    btnAddHighlight.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnAddHighlightActionPerformed(evt);
      }
    });

    btnRmHighlight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/us/pserver/coder/images/minus-gray-16.png"))); // NOI18N
    btnRmHighlight.setToolTipText("Remove Selected Highlight");
    btnRmHighlight.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnRmHighlightActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(btnAddHighlight)
        .addGap(18, 18, 18)
        .addComponent(btnRmHighlight)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(btnRmHighlight, javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(btnAddHighlight)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
    if(evt.getButton() == MouseEvent.BUTTON1
        && evt.getClickCount() > 1) {
      int idx = list.locationToIndex(evt.getPoint());
      if(idx >= 0 && idx < list.getModel().getSize()) {
        MatchAttribute ma = model.elementAt(idx);
        ma.get().getTextStyle().setBackground(frame.getEditor().getBackground());
        Match m = MatchConfigDialog.showDialog(getParentWindow(), ma.get());
        if(m != null) {
          frame.getEditor().getSintaxHighlighter().words().set(idx, m);
          updateList();
        }
      }
      list.setSelectedIndex(idx);
    }
  }//GEN-LAST:event_listMouseClicked

  
  private void cancelActionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelActionMouseClicked
    Window w = this.getParentWindow();
    if(w != null)
      w.setVisible(false);
    frame.status("Highlights Canceled", true);
  }//GEN-LAST:event_cancelActionMouseClicked

  
  private void applyActionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applyActionMouseClicked
    for(int i = 0; i < model.getSize(); i++) {
      model.elementAt(i).define();
    }
    this.getParentWindow().setVisible(false);
    frame.getEditor().getSintaxHighlighter().save();
    frame.status("Highlights Saved", false);
    frame.getEditor().update();
    
  }//GEN-LAST:event_applyActionMouseClicked

  private void btnAddHighlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHighlightActionPerformed
    Match m = new Match();
    m.setTextStyle(new TextStyle()
        .setBackground(frame.getEditor().getBackground()));
    m.getTextStyle().setFontAttr(
        new FontXml().setFont(frame.getEditor().getFont()));
    m = MatchConfigDialog.showDialog(getParentWindow(), m);
    if(m != null) {
      frame.getEditor().getSintaxHighlighter().words().add(m);
      updateList();
    }
  }//GEN-LAST:event_btnAddHighlightActionPerformed

  
  private void btnRmHighlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRmHighlightActionPerformed
    int idx = list.getSelectedIndex();
    if(idx >= 0 && idx < list.getModel().getSize()) {
      frame.getEditor().getSintaxHighlighter().words().remove(idx);
      updateList();
    }
  }//GEN-LAST:event_btnRmHighlightActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private us.pserver.coder.ui.ActionLabel applyAction;
  private javax.swing.JButton btnAddHighlight;
  private javax.swing.JButton btnRmHighlight;
  private us.pserver.coder.ui.ActionLabel cancelAction;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JList list;
  private javax.swing.JScrollPane scroll;
  // End of variables declaration//GEN-END:variables
}
