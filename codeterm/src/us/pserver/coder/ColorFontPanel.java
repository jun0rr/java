/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package us.pserver.coder;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.Window;
import javax.swing.JColorChooser;
import javax.swing.JDialog;

/**
 *
 * @author juno
 */
public class ColorFontPanel extends javax.swing.JPanel {

  private Color color;
  
  private Font font;
  
  private String name;
  
  
  /**
   * Creates new form ColorFontPanel
   */
  public ColorFontPanel() {
    initComponents();
  }
  
  
  private void updateDemo() {
    lblDemo.setForeground(color);
    lblDemo.setFont(font);
    lblDemo.setText(name);
    lblDemo.repaint();
  }


  public Color getSelectedColor() {
    return color;
  }
  
  
  public Font getSelectedFont() {
    return font;
  }
  
  
  public String getSelectedName() {
    return name;
  }
  
  
  public String getSelectedRegex() {
    return txtRegex.getText();
  }
  

  public void setSelectedColor(Color c) {
    color = c;
    if(color != null)
      this.updateDemo();
  }
  
  
  public void setSelectedFont(Font f) {
    font = f;
    if(font != null)
      this.updateDemo();
  }
  
  
  public void setSelectedName(String s) {
    name = s;
    txtName.setText(name);
    if(name != null)
      this.updateDemo();
  }
  
  
  public void setSelectedRegex(String s) {
    txtRegex.setText(s);
  }
  
  
  public void setDemoBackground(Color c) {
    if(c == null) {
      lblDemo.setOpaque(false);
      return;
    }
    else {
      lblDemo.setOpaque(true);
      lblDemo.setBackground(c);
    }
    if(lblDemo.isVisible())
      lblDemo.repaint();
  }
  

  private Window getParentWindow() {
    Container c = this;
    while(c != null) {
      if(c instanceof Window)
        return (Window) c;
      c = c.getParent();
    }
    return null;
  }
  
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    lblName = new javax.swing.JLabel();
    txtName = new javax.swing.JTextField();
    lblColor = new javax.swing.JLabel();
    lblFont = new javax.swing.JLabel();
    btnFont = new javax.swing.JButton();
    btnFG = new javax.swing.JButton();
    lblDemo = new javax.swing.JLabel();
    lblRegex = new javax.swing.JLabel();
    txtRegex = new javax.swing.JTextField();

    setBackground(new java.awt.Color(255, 255, 255));

    lblName.setText("Name:");

    txtName.setToolTipText("Attribute Name");
    txtName.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        txtNameKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        txtNameKeyReleased(evt);
      }
    });

    lblColor.setText("Color:");

    lblFont.setText("Font:");

    btnFont.setIcon(new javax.swing.ImageIcon(getClass().getResource("/us/pserver/coder/images/font-gray-20.png"))); // NOI18N
    btnFont.setToolTipText("Font Selector");
    btnFont.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnFontActionPerformed(evt);
      }
    });

    btnFG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/us/pserver/coder/images/color-gray-20.png"))); // NOI18N
    btnFG.setToolTipText("Foreground Color");
    btnFG.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
    btnFG.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnFGActionPerformed(evt);
      }
    });

    lblDemo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblDemo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

    lblRegex.setText("Regex:");

    txtRegex.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
    txtRegex.setToolTipText("Regular Expression Matcher");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(8, 8, 8)
            .addComponent(lblName)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(lblDemo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addGroup(layout.createSequentialGroup()
                .addComponent(lblRegex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRegex, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(layout.createSequentialGroup()
                .addComponent(lblColor, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFG)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFont)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFont)))))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblName)
          .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblRegex)
          .addComponent(txtRegex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(lblColor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnFG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addComponent(btnFont, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(lblFont, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(lblDemo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents
  
  
  private void btnFGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFGActionPerformed
    color = JColorChooser.showDialog(this, "Foreground Color", color);
    this.updateDemo();
  }//GEN-LAST:event_btnFGActionPerformed

  
  private void btnFontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFontActionPerformed
    FontSelector fe = new FontSelector(getParentWindow(), true, font);
    if(font != null) {
      System.out.println("* font != null");
      fe.setFontName(font.getFontName());
      fe.setFontSize(font.getSize());
      fe.setFontStyle(font.getStyle());
    }
    fe.setVisible(true);
    font = fe.getSelectedFont();
    if(font != null) {
      this.updateDemo();
    }
  }//GEN-LAST:event_btnFontActionPerformed

  
  private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
    name = txtName.getText();
    lblDemo.setText(name);
  }//GEN-LAST:event_txtNameKeyPressed

  private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
    name = txtName.getText();
    lblDemo.setText(name);
  }//GEN-LAST:event_txtNameKeyReleased

  
  public static ColorFontPanel showPanel(ColorFontPanel pnl, Window owner) {
    if(pnl == null) return null;
    JDialog dlg = new JDialog(owner, "Style Configurations");
    dlg.setContentPane(pnl);
    dlg.setModal(true);
    dlg.pack();
    dlg.setLocationRelativeTo(owner);
    dlg.setVisible(true);
    dlg.setDefaultCloseOperation(JDialog.HIDE_ON_CLOSE);
    return pnl;
  }
  
  
  public static void main(String[] args) {
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (Exception ex) {}
    ColorFontPanel cfp = new ColorFontPanel();
    cfp.setSelectedName("Test");
    cfp.setSelectedFont(new Font("SansSerif", Font.PLAIN, 13));
    cfp.setSelectedColor(Color.BLACK);
    System.out.println("* showPanel...");
    cfp = ColorFontPanel.showPanel(cfp, null);
    System.out.println("* "+ cfp);
    System.exit(0);
  }


  @Override
  public String toString() {
    return "ColorFontPanel{" + "name=" + name + ", color=" + color + ", font=" + font + '}';
  }
  

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnFG;
  private javax.swing.JButton btnFont;
  private javax.swing.JLabel lblColor;
  private javax.swing.JLabel lblDemo;
  private javax.swing.JLabel lblFont;
  private javax.swing.JLabel lblName;
  private javax.swing.JLabel lblRegex;
  private javax.swing.JTextField txtName;
  private javax.swing.JTextField txtRegex;
  // End of variables declaration//GEN-END:variables
}
