/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jpower.bbm;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.io.File;
import java.nio.file.InvalidPathException;
import java.text.DecimalFormat;
import java.util.LinkedList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;


/**
 *
 * @author juno
 */
public class BBMFrame extends javax.swing.JFrame 
    implements ProgressListener {

  private BBMProcessor processor;
  
  private boolean edit;
  
  private BBMProperties props;
  
  private List<PrevState> states;
  
  private Loading loading;
  
  
  private class Loading implements Runnable {
    private String[] chars = {"*", "* *", "* * *", "  * *", "    *", ""};
    private int i = 0;
    private JLabel label;
    public boolean run;
    public Loading(JLabel l) { label = l; }
    public void run() {
      while(run) {
        label.setText(chars[i]);
        label.repaint();
        i = (i+1 >= chars.length ? 0 : i+1);
        try { Thread.sleep(600); }
        catch(InterruptedException e) {}
      }
      label.setText("");
      label.repaint();
    }
    public void start() {
      run = true;
      new Thread(this).start();
    }
    public void stop() { 
      run = false;
    }
  }
  
  
  /**
   * Creates new form BBMFrame
   */
  public BBMFrame() {
    initComponents();
    loading = new Loading(loadLabel);
    states = new LinkedList<>();
    this.setLocationRelativeTo(null);
    edit = false;
    processor = new BBMProcessor();
    processor.setProgressListener(this);
    props = new BBMProperties(new File("./defaults.properties"));
    if(props.getBbmfile() != null) {
      bbmText.setText(props.getBbmfile());
      prodText.setText(props.getProdfile());
      startText.setText(props.getStartdate());
      endText.setText(props.getEnddate());
      logText.setText(props.getLogfile());
      progText.setText(props.getProgfile());
      prefText.setText(props.getPrefixfile());
    }
  }


  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    prefTypeGroup = new javax.swing.ButtonGroup();
    titleLabel = new javax.swing.JLabel();
    titleSeparator = new javax.swing.JSeparator();
    bbmLabel = new javax.swing.JLabel();
    bbmText = new javax.swing.JTextField();
    bbmButton = new javax.swing.JButton();
    prodLabel = new javax.swing.JLabel();
    prodText = new javax.swing.JTextField();
    prodButton = new javax.swing.JButton();
    configPanel = new javax.swing.JPanel();
    logLabel = new javax.swing.JLabel();
    logText = new javax.swing.JTextField();
    logButton = new javax.swing.JButton();
    progLabel = new javax.swing.JLabel();
    progText = new javax.swing.JTextField();
    progButton = new javax.swing.JButton();
    editButton = new javax.swing.JToggleButton();
    statusBar = new javax.swing.JTextField();
    progressBar = new javax.swing.JProgressBar();
    startButton = new javax.swing.JButton();
    stopButton = new javax.swing.JButton();
    intervalPanel = new javax.swing.JPanel();
    startLabel = new javax.swing.JLabel();
    startText = new javax.swing.JTextField();
    endText = new javax.swing.JTextField();
    endLabel = new javax.swing.JLabel();
    vcsButton = new javax.swing.JButton();
    prefPanel = new javax.swing.JPanel();
    prefLabel = new javax.swing.JLabel();
    prefText = new javax.swing.JTextField();
    prefButton = new javax.swing.JButton();
    incPrefRadio = new javax.swing.JRadioButton();
    excPrefRadio = new javax.swing.JRadioButton();
    loadLabel = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("BBMProcessor");
    setIconImage(new ImageIcon(this.getClass().getResource("binary.png")).getImage());

    titleLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    titleLabel.setText("BBM Processor: Análise de Ponto de Corte COP");

    bbmLabel.setText("Arquivo BBM:");

    bbmText.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
    bbmText.setText("Selecione o arquivo BBM");
    bbmText.setToolTipText("Arquivo de Análises COP");
    bbmText.setSelectionStart(0);

    bbmButton.setText("...");
    bbmButton.setToolTipText("Excolha o Arquivo");
    bbmButton.setPreferredSize(new java.awt.Dimension(35, 20));
    bbmButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bbmButtonActionPerformed(evt);
      }
    });

    prodLabel.setText("Produtos:");

    prodText.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
    prodText.setText(".\\produtos.csv");
    prodText.setToolTipText("Banco de Dados de Produtos");

    prodButton.setText("...");
    prodButton.setToolTipText("Excolha o Arquivo");
    prodButton.setPreferredSize(new java.awt.Dimension(35, 20));
    prodButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        prodButtonActionPerformed(evt);
      }
    });

    configPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Configurações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10), new java.awt.Color(0, 51, 102))); // NOI18N

    logLabel.setText("Arquivo de Log:");
    logLabel.setEnabled(false);

    logText.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
    logText.setText(".\\bbm.log");
    logText.setEnabled(false);

    logButton.setText("...");
    logButton.setToolTipText("Excolha o Arquivo");
    logButton.setEnabled(false);
    logButton.setPreferredSize(new java.awt.Dimension(35, 20));
    logButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        logButtonActionPerformed(evt);
      }
    });

    progLabel.setText("Arquivo de Progresso:");
    progLabel.setEnabled(false);

    progText.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
    progText.setText(".\\bbmprogress.properties");
    progText.setEnabled(false);

    progButton.setText("...");
    progButton.setToolTipText("Excolha o Arquivo");
    progButton.setEnabled(false);
    progButton.setPreferredSize(new java.awt.Dimension(35, 20));
    progButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        progButtonActionPerformed(evt);
      }
    });

    editButton.setText("Editar");
    editButton.setPreferredSize(new java.awt.Dimension(61, 20));
    editButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        editButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
    configPanel.setLayout(configPanelLayout);
    configPanelLayout.setHorizontalGroup(
      configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(configPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(progLabel)
          .addComponent(logLabel))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(configPanelLayout.createSequentialGroup()
            .addComponent(logText)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(logButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(configPanelLayout.createSequentialGroup()
            .addComponent(progText)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(progButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(configPanelLayout.createSequentialGroup()
            .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    configPanelLayout.setVerticalGroup(
      configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(configPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(logLabel)
          .addComponent(logText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(logButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(progLabel)
          .addComponent(progText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(progButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    statusBar.setEditable(false);
    statusBar.setBackground(new java.awt.Color(239, 239, 239));
    statusBar.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
    statusBar.setPreferredSize(new java.awt.Dimension(90, 25));

    startButton.setText("Iniciar Análise");
    startButton.setPreferredSize(new java.awt.Dimension(120, 23));
    startButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        startButtonActionPerformed(evt);
      }
    });

    stopButton.setText("Parar Análise");
    stopButton.setPreferredSize(new java.awt.Dimension(120, 23));
    stopButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        stopButtonActionPerformed(evt);
      }
    });

    intervalPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Intervalo de Análise", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10), new java.awt.Color(0, 51, 102))); // NOI18N

    startLabel.setText("Data Inicial:");

    startText.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
    startText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    startText.setText("01/03/2012");

    endText.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
    endText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    endText.setText("01/03/2013");

    endLabel.setText("Data Final:");

    javax.swing.GroupLayout intervalPanelLayout = new javax.swing.GroupLayout(intervalPanel);
    intervalPanel.setLayout(intervalPanelLayout);
    intervalPanelLayout.setHorizontalGroup(
      intervalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(intervalPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(startLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(startText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(endLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(endText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );
    intervalPanelLayout.setVerticalGroup(
      intervalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(intervalPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(intervalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(intervalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(endLabel)
            .addComponent(endText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(intervalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(startLabel)
            .addComponent(startText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    vcsButton.setText("Visão Parcial");
    vcsButton.setPreferredSize(new java.awt.Dimension(120, 23));
    vcsButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        vcsButtonActionPerformed(evt);
      }
    });

    prefPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prefixos de Agências", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10), new java.awt.Color(0, 51, 102))); // NOI18N

    prefLabel.setText("Arquivo de Prefixos:");
    prefLabel.setEnabled(false);

    prefText.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
    prefText.setEnabled(false);

    prefButton.setText("...");
    prefButton.setToolTipText("Excolha o Arquivo");
    prefButton.setEnabled(false);
    prefButton.setPreferredSize(new java.awt.Dimension(35, 20));
    prefButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        prefButtonActionPerformed(evt);
      }
    });

    prefTypeGroup.add(incPrefRadio);
    incPrefRadio.setText("Incluir Prefixos na Análise");
    incPrefRadio.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        incPrefRadioActionPerformed(evt);
      }
    });

    prefTypeGroup.add(excPrefRadio);
    excPrefRadio.setText("Excluir Prefixos da Análise");
    excPrefRadio.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        excPrefRadioActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout prefPanelLayout = new javax.swing.GroupLayout(prefPanel);
    prefPanel.setLayout(prefPanelLayout);
    prefPanelLayout.setHorizontalGroup(
      prefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(prefPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(prefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(prefPanelLayout.createSequentialGroup()
            .addComponent(incPrefRadio)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(excPrefRadio))
          .addGroup(prefPanelLayout.createSequentialGroup()
            .addComponent(prefLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(prefText)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(prefButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    prefPanelLayout.setVerticalGroup(
      prefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(prefPanelLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(prefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(incPrefRadio)
          .addComponent(excPrefRadio))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(prefPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(prefLabel)
          .addComponent(prefText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(prefButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    loadLabel.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
    loadLabel.setForeground(new java.awt.Color(0, 0, 255));
    loadLabel.setPreferredSize(new java.awt.Dimension(48, 14));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(prefPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(bbmLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(bbmText)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(bbmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addComponent(titleSeparator)
          .addGroup(layout.createSequentialGroup()
            .addComponent(prodLabel)
            .addGap(27, 27, 27)
            .addComponent(prodText)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(prodButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addComponent(intervalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(configPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(titleLabel))
              .addGroup(layout.createSequentialGroup()
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vcsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
      .addGroup(layout.createSequentialGroup()
        .addGap(184, 184, 184)
        .addComponent(loadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(titleLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(titleSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(bbmLabel)
          .addComponent(bbmText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(bbmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(prodLabel)
          .addComponent(prodText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(prodButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(intervalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(prefPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(2, 2, 2)
        .addComponent(loadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(2, 2, 2)
        .addComponent(configPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(vcsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    progressBar.setMinimum(0);
    progressBar.setMaximum(1000);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  
  private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
    edit = !edit;
    if(!edit) {
      File f = validateFile(logText.getText(), false);
      if(f == null) {
        setStatus("Arquivo de log inválido: "+ logText.getText(), true);
        edit = !edit;
        editButton.setSelected(edit);
        return;
      }
      processor.setLogFile(f);
      
      f = validateFile(progText.getText(), false);
      if(f == null) {
        setStatus("Arquivo de progresso inválido: "+ progText.getText(), true);
        edit = !edit;
        editButton.setSelected(edit);
        return;
      }
      processor.setProgressFile(f);
    }

    logLabel.setEnabled(edit);
    logText.setEnabled(edit);
    logButton.setEnabled(edit);
    progLabel.setEnabled(edit);
    progText.setEnabled(edit);
    progButton.setEnabled(edit);
    editButton.setText((edit ? "Salvar" : "Editar"));
    setStatus(null, false);
  }//GEN-LAST:event_editButtonActionPerformed

  
  private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
    if(!validateToStart()) return;
    this.disableComponents(this);
    loading.start();
    start();
    setStatus(null, false);
  }//GEN-LAST:event_startButtonActionPerformed

  
  private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
    loading.stop();
    this.enableComponents();
    processor.stop();
    try { Thread.sleep(200); }
    catch(InterruptedException e) {}
    setStatus("Processamento parado.", false);
  }//GEN-LAST:event_stopButtonActionPerformed

  
  private void bbmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbmButtonActionPerformed
    String path = this.getDirPath(bbmText.getText());
    path = this.getFile(path);
    if(path != null) bbmText.setText(path);
  }//GEN-LAST:event_bbmButtonActionPerformed

  
  private void prodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodButtonActionPerformed
    String path = this.getDirPath(prodText.getText());
    path = this.getFile(path);
    if(path != null) prodText.setText(path);
  }//GEN-LAST:event_prodButtonActionPerformed

  
  private void logButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logButtonActionPerformed
    String path = this.getDirPath(logText.getText());
    path = this.getFile(path);
    if(path != null) logText.setText(path);
  }//GEN-LAST:event_logButtonActionPerformed

  
  private void progButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_progButtonActionPerformed
    String path = this.getDirPath(progText.getText());
    path = this.getFile(path);
    if(path != null) progText.setText(path);
  }//GEN-LAST:event_progButtonActionPerformed

  
  private void vcsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vcsButtonActionPerformed
    viewConsolidated();
  }//GEN-LAST:event_vcsButtonActionPerformed

  
  private void prefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefButtonActionPerformed
    String path = this.getDirPath(prefText.getText());
    path = this.getFile(path);
    if(path != null) prefText.setText(path);
  }//GEN-LAST:event_prefButtonActionPerformed

  
  private void incPrefRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incPrefRadioActionPerformed
    if(!prefLabel.isEnabled()) {
      prefLabel.setEnabled(true);
      prefText.setEnabled(true);
      prefButton.setEnabled(true);
    }
  }//GEN-LAST:event_incPrefRadioActionPerformed

  private void excPrefRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excPrefRadioActionPerformed
    if(!prefLabel.isEnabled()) {
      prefLabel.setEnabled(true);
      prefText.setEnabled(true);
      prefButton.setEnabled(true);
    }
  }//GEN-LAST:event_excPrefRadioActionPerformed

  
  private String getDirPath(String s) {
    if(s == null || s.trim().isEmpty())
      return null;
    File f = new File(s);
    if(f.exists() && f.isFile() && f.getAbsoluteFile()
        .getParentFile() != null)
      return f.getAbsoluteFile().getParentFile().getPath();
    else if(!f.exists() && f.getAbsoluteFile()
        .getParentFile() != null)
      return getDirPath(f.getAbsoluteFile().getParentFile().getPath());
    else
      return s;
  }
  
  
  private void disableComponents(Container cont) {
    if(cont == null) return;
    
    Component[] cs = cont.getComponents();
    int i = 0;
    
    for(Component c : cs) {
      states.add(new PrevState(c, c.isEnabled()));
      c.setEnabled(false);
      
      if(c instanceof Container)
        disableComponents((Container) c);
    }
    
    stopButton.setEnabled(true);
    vcsButton.setEnabled(true);
    progressBar.setEnabled(true);
    statusBar.setEnabled(true);
  }
  
  
  private void enableComponents() {
    for(PrevState ps : states) {
      ps.getComponent().setEnabled(ps.isEnabled());
    }
    states.clear();
  }
  
  
  private void start() {
    new Thread(new Runnable() {
      public void run() {
        processor.start();
        if(processor.isRunning()) {
          stopButtonActionPerformed(null);
          setStatus("Análise Cconcluída com Sucesso!", false);
        }
      }
    }).start();
  }
  
  
  public String getFile(String dir) {
    JFileChooser chooser = new JFileChooser(dir);
    int r = chooser.showOpenDialog(this);
    if(r == JFileChooser.APPROVE_OPTION) {
      return chooser.getSelectedFile().getPath();
    }
    return null;
  }
  
  
  public void setProgress(BBMProgress p) {
    setRunningStatus("Análise em andamento: "+ p.getStringPercent(), false);
    progressBar.setValue((int) (p.getPercent() * 1000));
  }
  
  
  private void viewConsolidated() {
    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEADING, 0, 0));
    Font font = new Font("MONOSPACED", Font.PLAIN, 12);
    
    JTextArea tlinha = new JTextArea();
    tlinha.setEditable(false);
    tlinha.setFont(font);
    
    JTextArea tcount = new JTextArea();
    tcount.setEditable(false);
    tcount.setFont(font);
    
    JTextArea tvalue = new JTextArea();
    tvalue.setEditable(false);
    tvalue.setFont(font);
    
    JTextArea tinst = new JTextArea();
    tinst.setEditable(false);
    tinst.setFont(font);
    
    JScrollPane scroll = new JScrollPane(panel);
    scroll.setPreferredSize(new Dimension(520, 500));
    
    List<ProdutoCount> pcs = processor.getProdutoCountPool().getPool();
    StringBuilder slinha = new StringBuilder();
    slinha.append("LINHA").append("\n")
        .append("----------------------------------------\n");
    StringBuilder scount = new StringBuilder();
    scount.append("QTD.").append("\n")
        .append("----------\n");
    StringBuilder svalue = new StringBuilder();
    svalue.append("VALOR").append("\n")
        .append("----------------\n");
    StringBuilder sinst = new StringBuilder();
    sinst.append("INSTANCIA").append("\n")
        .append("---------\n");
    
    DecimalFormat df = new DecimalFormat("0,000");
    long acount = 0;
    double avalue = 0;
    long count = 0;
    double value = 0;
    
    for(ProdutoCount pc : pcs) {
      slinha.append(pc.getProduto().getLinha()).append("\n");
      scount.append(formatValue(pc.getCount(), 10)).append("\n");
      svalue.append(formatValue(pc.getTotalValue(), 16)).append("\n");
      sinst.append(pc.getInstancia().name()).append("\n");
      if(pc.getInstancia() == Instancia.AGENCIA) {
        acount += pc.getCount();
        avalue += pc.getTotalValue();
      }
      else {
        count += pc.getCount();
        value += pc.getTotalValue();
      }
    }
    slinha.append("----------------------------------------\n");
    scount.append("----------\n");
    svalue.append("----------------\n");
    sinst.append("---------\n");
    slinha.append("TOTAL AGENCIA").append("\n");
    scount.append(formatValue(acount, 10)).append("\n");
    svalue.append(formatValue(avalue, 16)).append("\n");
    sinst.append(Instancia.AGENCIA.name()).append("\n");
    slinha.append("TOTAL CSO");
    scount.append(formatValue(count, 10));
    svalue.append(formatValue(value, 16));
    sinst.append(Instancia.CSO.name());
    
    tlinha.setText(slinha.toString());
    tcount.setText(scount.toString());
    tvalue.setText(svalue.toString());
    tinst.setText(sinst.toString());
    tinst.setCaretPosition(0);
    panel.add(tlinha);
    panel.add(tcount);
    panel.add(tvalue);
    panel.add(tinst);
    
    JOptionPane.showMessageDialog(this, scroll);
  }
  
  
  private String formatValue(double value, int size) {
    if(size < 1) size = 15;
    DecimalFormat df = new DecimalFormat("#,###");
    String sval = df.format(value);
    int len = sval.length();
    for(int i = 0; i < (size - len); i++) {
      sval = " " + sval;
    }
    return sval;
  }
  
  
  private boolean validateToStart() {
    if(editButton.isSelected()) {
      setStatus("Configurações não salvas!", true);
      return false;
    }
    
    if(!processor.setStringStartDate(startText.getText())) {
      setStatus("Data inicial inválida: "+ startText.getText(), true);
      return false;
    }
    if(!processor.setStringEndDate(endText.getText())) {
      setStatus("Data final inválida: "+ endText.getText(), true);
      return false;
    }
    
    File f = validateFile(bbmText.getText(), true);
    if(f == null) {
      setStatus("Arquivo BBM Inválido: "+ bbmText.getText(), true);
      return false;
    }
    processor.setBbmFile(f);
    
    f = validateFile(prodText.getText(), true);
    if(f == null) {
      setStatus("Arquivo de produtos Inválido: "+ prodText.getText(), true);
      return false;
    }
    processor.setProdutosFile(f);
    if(processor.getDBProduto().getProdutos().isEmpty()) {
      setStatus("Arquivo de produtos Inválido: "+ prodText.getText(), true);
      return false;
    }
    
    f = validateFile(progText.getText(), false);
    if(f == null) {
      setStatus("Arquivo de progresso Inválido: "+ progText.getText(), true);
      return false;
    }
    processor.setProgressFile(f);
    
    f = validateFile(logText.getText(), false);
    if(f == null) {
      setStatus("Arquivo de log Inválido: "+ logText.getText(), true);
      return false;
    }
    processor.setLogFile(f);
    
    f = validateFile(prefText.getText(), false);
    if(f != null && (incPrefRadio.isSelected() 
        || excPrefRadio.isSelected())) {
      processor.setPrefixFile(f, incPrefRadio.isSelected());
    }
    
    props.setBbmfile(bbmText.getText())
        .setEnddate(endText.getText())
        .setLogfile(logText.getText())
        .setProdfile(prodText.getText())
        .setProgfile(progText.getText())
        .setStartdate(startText.getText())
        .setPrefixfile(prefText.getText())
        .save();
    
    return true;
  }
  
  
  private File validateFile(String s, boolean shouldExist) {
    if(s == null || s.isEmpty())
      return null;
    try {
      File f = new File(s);
      if(shouldExist && (!f.exists() || !f.isFile()))
        return null;
      f.toPath();
      return f;
    } catch(InvalidPathException e) {
      return null;
    }  
  }
  
  
  private void setStatus(String text, boolean error) {
    statusBar.setBackground(new Color(239, 239, 239));
    if(text == null) {
      statusBar.setText("");
      return;
    }
    if(error) {
      text = "# "+ text;
      statusBar.setForeground(Color.RED);
    }
    else {
      text = "* "+ text;
      statusBar.setForeground(Color.BLUE);
    }
    statusBar.setText(text);
  }
  

  private void setRunningStatus(String text, boolean error) {
    statusBar.setBackground(Color.DARK_GRAY);
    if(text == null) {
      statusBar.setText("");
      return;
    }
    if(error) {
      text = "# "+ text;
      statusBar.setForeground(Color.ORANGE);
    }
    else {
      text = "* "+ text;
      statusBar.setForeground(Color.GREEN);
    }
    statusBar.setText(text);
  }
  

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(BBMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(BBMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(BBMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(BBMFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new BBMFrame().setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton bbmButton;
  private javax.swing.JLabel bbmLabel;
  private javax.swing.JTextField bbmText;
  private javax.swing.JPanel configPanel;
  private javax.swing.JToggleButton editButton;
  private javax.swing.JLabel endLabel;
  private javax.swing.JTextField endText;
  private javax.swing.JRadioButton excPrefRadio;
  private javax.swing.JRadioButton incPrefRadio;
  private javax.swing.JPanel intervalPanel;
  private javax.swing.JLabel loadLabel;
  private javax.swing.JButton logButton;
  private javax.swing.JLabel logLabel;
  private javax.swing.JTextField logText;
  private javax.swing.JButton prefButton;
  private javax.swing.JLabel prefLabel;
  private javax.swing.JPanel prefPanel;
  private javax.swing.JTextField prefText;
  private javax.swing.ButtonGroup prefTypeGroup;
  private javax.swing.JButton prodButton;
  private javax.swing.JLabel prodLabel;
  private javax.swing.JTextField prodText;
  private javax.swing.JButton progButton;
  private javax.swing.JLabel progLabel;
  private javax.swing.JTextField progText;
  private javax.swing.JProgressBar progressBar;
  private javax.swing.JButton startButton;
  private javax.swing.JLabel startLabel;
  private javax.swing.JTextField startText;
  private javax.swing.JTextField statusBar;
  private javax.swing.JButton stopButton;
  private javax.swing.JLabel titleLabel;
  private javax.swing.JSeparator titleSeparator;
  private javax.swing.JButton vcsButton;
  // End of variables declaration//GEN-END:variables
}
